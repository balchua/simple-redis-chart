apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "redis-server.fullname" . }}
  labels:
    {{- include "redis-server.labels" . | nindent 4 }}  
  namespace: {{ .Release.Namespace }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "redis-server.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "redis-server.labels" . | nindent 8 }}
	{{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}        
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}      
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}        
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args: ["--requirepass", "$(REDIS_PASS)", "--appendonly", "yes", "--save", "900", "1", "--save", "30", "1"]
          ports:
            - name: redis
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          livenessProbe:
            tcpSocket:
              port: redis
          readinessProbe:
            tcpSocket:
              port: redis
          env:
            - name: REDIS_PASS
              valueFrom:
                secretKeyRef:
                  name: {{ include "redis-server.fullname" . }}
                  key: redis_password
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
          - name: {{ include "redis-server.fullname" . }}
            mountPath: /data
  {{ if  .Values.persistence.enabled }}
  volumeClaimTemplates:
    - metadata:
        name: {{ include "redis-server.fullname" . }}
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 1Gi
        storageClassName: {{ .Values.persistence.storageClassName }}
  {{ else }}
      volumes:
      - name: redis-data
        emptyDir: {}
   {{ end }}

